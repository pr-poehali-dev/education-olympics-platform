import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Checkbox } from "@/components/ui/checkbox";
import Icon from "@/components/ui/icon";
import { useState } from "react";
import { useToast } from "@/hooks/use-toast";

interface RegistrationForm {
  firstName: string;
  lastName: string;
  middleName: string;
  email: string;
  grade: string;
  parentEmail: string;
  agreeTerms: boolean;
  agreeNews: boolean;
}

const grades = [
  { value: "preschool", label: "–î–æ—à–∫–æ–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞" },
  { value: "grade1", label: "1 –∫–ª–∞—Å—Å" },
  { value: "grade2", label: "2 –∫–ª–∞—Å—Å" },
  { value: "grade3", label: "3 –∫–ª–∞—Å—Å" },
  { value: "grade4", label: "4 –∫–ª–∞—Å—Å" }
];

export default function Register() {
  const { toast } = useToast();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [formData, setFormData] = useState<RegistrationForm>({
    firstName: "",
    lastName: "",
    middleName: "",
    email: "",
    grade: "",
    parentEmail: "",
    agreeTerms: false,
    agreeNews: false
  });

  const [errors, setErrors] = useState<Partial<RegistrationForm>>({});

  const validateForm = (): boolean => {
    const newErrors: Partial<RegistrationForm> = {};

    if (!formData.firstName.trim()) {
      newErrors.firstName = "–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    }
    
    if (!formData.lastName.trim()) {
      newErrors.lastName = "–§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    }

    if (!formData.email.trim()) {
      newErrors.email = "Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
      newErrors.email = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email";
    }

    if (!formData.grade) {
      newErrors.grade = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å";
    }

    if (!formData.agreeTerms) {
      newErrors.agreeTerms = "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏";
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email —Ä–æ–¥–∏—Ç–µ–ª—è –¥–ª—è –¥–æ—à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –∏ –º–ª–∞–¥—à–∏—Ö –∫–ª–∞—Å—Å–æ–≤
    if ((formData.grade === "preschool" || formData.grade === "grade1") && !formData.parentEmail.trim()) {
      newErrors.parentEmail = "Email —Ä–æ–¥–∏—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞";
    } else if (formData.parentEmail && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.parentEmail)) {
      newErrors.parentEmail = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email —Ä–æ–¥–∏—Ç–µ–ª—è";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    setIsSubmitting(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    setTimeout(() => {
      toast({
        title: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! üéâ",
        description: "–ù–∞ –≤–∞—à email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ.",
      });
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      setIsSubmitting(false);
    }, 2000);
  };

  const updateField = (field: keyof RegistrationForm, value: string | boolean) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    // –£–±–∏—Ä–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: undefined }));
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-peach via-white to-sunshine py-12 px-4">
      <div className="max-w-2xl mx-auto">
        <div className="text-center mb-8">
          <div className="inline-flex items-center bg-white/90 backdrop-blur-sm px-6 py-3 rounded-full border border-tangerine/30 mb-6">
            <Icon name="UserPlus" className="h-5 w-5 text-tangerine mr-2" />
            <span className="text-darkBlue font-medium">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º</span>
          </div>
          <h1 className="text-4xl font-bold text-darkBlue mb-4 font-heading">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞</h1>
          <p className="text-xl text-darkBlue/80">–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤</p>
        </div>

        <Card className="bg-white/90 backdrop-blur-sm shadow-xl">
          <CardHeader className="text-center">
            <CardTitle className="text-2xl font-heading text-darkBlue">–î–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞</CardTitle>
            <CardDescription>
              –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
              {/* –§–ò–û */}
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <Label htmlFor="lastName">–§–∞–º–∏–ª–∏—è *</Label>
                  <Input
                    id="lastName"
                    type="text"
                    placeholder="–ò–≤–∞–Ω–æ–≤"
                    value={formData.lastName}
                    onChange={(e) => updateField("lastName", e.target.value)}
                    className={errors.lastName ? "border-red-500" : ""}
                  />
                  {errors.lastName && <p className="text-sm text-red-600 mt-1">{errors.lastName}</p>}
                </div>
                <div>
                  <Label htmlFor="firstName">–ò–º—è *</Label>
                  <Input
                    id="firstName"
                    type="text"
                    placeholder="–ò–≤–∞–Ω"
                    value={formData.firstName}
                    onChange={(e) => updateField("firstName", e.target.value)}
                    className={errors.firstName ? "border-red-500" : ""}
                  />
                  {errors.firstName && <p className="text-sm text-red-600 mt-1">{errors.firstName}</p>}
                </div>
                <div>
                  <Label htmlFor="middleName">–û—Ç—á–µ—Å—Ç–≤–æ</Label>
                  <Input
                    id="middleName"
                    type="text"
                    placeholder="–ò–≤–∞–Ω–æ–≤–∏—á"
                    value={formData.middleName}
                    onChange={(e) => updateField("middleName", e.target.value)}
                  />
                </div>
              </div>

              {/* Email —É—á–∞—Å—Ç–Ω–∏–∫–∞ */}
              <div>
                <Label htmlFor="email">Email —É—á–∞—Å—Ç–Ω–∏–∫–∞ *</Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="ivan@example.com"
                  value={formData.email}
                  onChange={(e) => updateField("email", e.target.value)}
                  className={errors.email ? "border-red-500" : ""}
                />
                {errors.email && <p className="text-sm text-red-600 mt-1">{errors.email}</p>}
                <p className="text-sm text-darkBlue/60 mt-1">
                  –ù–∞ —ç—Ç–æ—Ç email –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
                </p>
              </div>

              {/* –ö–ª–∞—Å—Å */}
              <div>
                <Label htmlFor="grade">–ö–ª–∞—Å—Å –æ–±—É—á–µ–Ω–∏—è *</Label>
                <Select value={formData.grade} onValueChange={(value) => updateField("grade", value)}>
                  <SelectTrigger className={errors.grade ? "border-red-500" : ""}>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å" />
                  </SelectTrigger>
                  <SelectContent>
                    {grades.map((grade) => (
                      <SelectItem key={grade.value} value={grade.value}>
                        {grade.label}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
                {errors.grade && <p className="text-sm text-red-600 mt-1">{errors.grade}</p>}
              </div>

              {/* Email —Ä–æ–¥–∏—Ç–µ–ª—è (—É—Å–ª–æ–≤–Ω–æ) */}
              {(formData.grade === "preschool" || formData.grade === "grade1" || formData.grade === "grade2") && (
                <div>
                  <Label htmlFor="parentEmail">Email —Ä–æ–¥–∏—Ç–µ–ª—è {(formData.grade === "preschool" || formData.grade === "grade1") && "*"}</Label>
                  <Input
                    id="parentEmail"
                    type="email"
                    placeholder="parent@example.com"
                    value={formData.parentEmail}
                    onChange={(e) => updateField("parentEmail", e.target.value)}
                    className={errors.parentEmail ? "border-red-500" : ""}
                  />
                  {errors.parentEmail && <p className="text-sm text-red-600 mt-1">{errors.parentEmail}</p>}
                  <p className="text-sm text-darkBlue/60 mt-1">
                    –†–æ–¥–∏—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∫–æ–ø–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </p>
                </div>
              )}

              {/* –°–æ–≥–ª–∞—Å–∏—è */}
              <div className="space-y-4 p-4 bg-sunshine/10 rounded-lg border border-tangerine/20">
                <div className="flex items-start space-x-3">
                  <Checkbox
                    id="agreeTerms"
                    checked={formData.agreeTerms}
                    onCheckedChange={(checked) => updateField("agreeTerms", checked as boolean)}
                    className="mt-0.5"
                  />
                  <Label htmlFor="agreeTerms" className="text-sm leading-relaxed cursor-pointer">
                    –Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å{" "}
                    <a href="#terms" className="text-tangerine hover:text-warmOrange underline">
                      –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º
                    </a>{" "}
                    –∏{" "}
                    <a href="#privacy" className="text-tangerine hover:text-warmOrange underline">
                      –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                    </a>
                    *
                  </Label>
                </div>
                {errors.agreeTerms && <p className="text-sm text-red-600">{errors.agreeTerms}</p>}

                <div className="flex items-start space-x-3">
                  <Checkbox
                    id="agreeNews"
                    checked={formData.agreeNews}
                    onCheckedChange={(checked) => updateField("agreeNews", checked as boolean)}
                    className="mt-0.5"
                  />
                  <Label htmlFor="agreeNews" className="text-sm leading-relaxed cursor-pointer">
                    –Ø —Ö–æ—á—É –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö
                  </Label>
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
              <Button
                type="submit"
                className="w-full bg-gradient-to-r from-tangerine to-warmOrange hover:from-warmOrange hover:to-tangerine text-lg py-3"
                disabled={isSubmitting}
              >
                {isSubmitting ? (
                  <>
                    <Icon name="Loader2" className="mr-2 h-5 w-5 animate-spin" />
                    –°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç...
                  </>
                ) : (
                  <>
                    <Icon name="UserPlus" className="mr-2 h-5 w-5" />
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                  </>
                )}
              </Button>

              {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Ö–æ–¥ */}
              <div className="text-center pt-4 border-t border-tangerine/20">
                <p className="text-darkBlue/60">
                  –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{" "}
                  <a href="/login" className="text-tangerine hover:text-warmOrange font-medium underline">
                    –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                  </a>
                </p>
              </div>
            </form>
          </CardContent>
        </Card>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-8 grid grid-cols-1 md:grid-cols-2 gap-6">
          <Card className="bg-white/80 backdrop-blur-sm">
            <CardHeader>
              <CardTitle className="flex items-center gap-2 font-heading">
                <Icon name="Shield" className="h-5 w-5 text-tangerine" />
                –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-darkBlue/80">
                –ú—ã –∑–∞—â–∏—â–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –§–ó-152.
                –î–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–¥–∞—á–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏ —Å–≤—è–∑–∏ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.
              </p>
            </CardContent>
          </Card>

          <Card className="bg-white/80 backdrop-blur-sm">
            <CardHeader>
              <CardTitle className="flex items-center gap-2 font-heading">
                <Icon name="Mail" className="h-5 w-5 text-tangerine" />
                –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-darkBlue/80">
                –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π email –ø—Ä–∏–¥–µ—Ç –ø–∏—Å—å–º–æ —Å —Å—Å—ã–ª–∫–æ–π –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
                –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º".
              </p>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}